ARG BUN_VERSION=1.2.21
# Set bun image version
FROM node:22-alpine AS base

# Install bash, curl, and turbo for base, then clean up
RUN apk update && \
  apk add --no-cache bash curl npm && \
  npm install -g turbo@latest tsc tsup typescript && \
  rm -rf /var/cache/apk/*

# Set working directory for base
WORKDIR /app

# Builder stage to compile the application
FROM base AS builder
COPY . .

# Prune and prepare the application
RUN turbo prune api --docker

# Installer stage to set up environment
FROM base AS installer

# Set working directory
WORKDIR /app

COPY --from=builder /app/out/json/ .

# Install dependencies without audit to speed up the process
RUN npm install

COPY --from=builder /app/out/full/ .

RUN npx turbo run build --continue

# Copy build artifacts
# COPY --from=builder /app/turbo.json ./turbo.json

# FROM bun image AS runner stage to run the application

# Install bash and curl (if required)
RUN apk update && \
  apk add --no-cache bash curl && \
  rm -rf /var/cache/apk/*

# Set bun image version
FROM oven/bun:${BUN_VERSION}-alpine AS runner

RUN apk add --no-cache bash curl && \
  rm -rf /var/cache/apk/*

COPY --from=installer /app /app

# Set working directory
WORKDIR /app/apps/api

# Set up non-root user
RUN addgroup --system honojs && \
  adduser --system --ingroup honojs honojs --uid 1001

USER honojs

# Copy application from the installer stage
# COPY --from=installer /app/node_modules ./node_modules
# COPY --from=installer /app/apps ./apps
# COPY --from=installer /app/packages ./packages

CMD ["bun", "run", "src/main.ts"]
