// Generated by ts-to-zod
import { z } from "zod";
import {
  CrmE33_E41_Linguistic_Appellation, CrmE33_Linguistic_Object, CrmE33_Linguistic_Object2, CrmE36_Visual_Item, CrmE42_Identifier, CrmE55_Type, CrmE7_Activity1, CrmP129IIsSubjectOf, CrmP138IHasRepresentation, CrmP140IWasAttributedBy, CrmP14IPerformed, CrmP1IsIdentifiedBy, CrmP2HasType, CrmP32UsedGeneralTechnique, CrmP67IIsReferredToBy, CrmP76HasContactPoint, CrmP95IWasFormedBy,
  CrmP99IWasDissolvedBy, DigD1_Digital_Object, GroupSchema, LaDigitallyCarriedBy, LaDigitallyShownBy
} from "./../types/group.d";
import { activityTypeSchema, allTypesSchema, crmHumanMadeObjectTypeSchema, crmP190HasSymbolicContentSchema, dcFormatSchema, digitalObjectTypeSchema, dissolutionTypeSchema, formationTypeSchema, genericString, groupTypeSchema, identifierTypeSchema, informationTypeSchema, linkedArtSchema, linkedArtWithExtensionsSchema, measurementUnitTypeSchema, nameTypeSchema, personTypeSchema, rdfsLabelSchema, rdfTypeSchema, textTypeSchema, theSubjectUriSchema, typeTypeSchema, visualItemTypeSchema } from './core';
import { crmE13AttributeAssignmentSchema, crmE33LinguisticObject1Schema, crmE53PlaceSchema, crmE56LanguageSchema, crmE7ActivitySchema, crmP4HasTimeSpanSchema, digD1DigitalObjectSeeSchemaDigitalHtmlSchema } from './object';

export const crmE6EventSchema = z.object({
  id: theSubjectUriSchema,
  type: genericString.and(z.literal("Event")),
  _label: rdfsLabelSchema.optional(),
});

export const e21PersonSchema = z.object({
  id: theSubjectUriSchema,
  type: genericString.and(personTypeSchema),
  _label: rdfsLabelSchema.optional(),
});

export const crmE74GroupSchema = z.object({
  id: theSubjectUriSchema,
  type: rdfTypeSchema.and(groupTypeSchema),
  _label: rdfsLabelSchema.optional(),
});

export const crmE22HumanMadeObjectSchema = z.object({
  id: theSubjectUriSchema,
  type: genericString.and(crmHumanMadeObjectTypeSchema),
  _label: rdfsLabelSchema.optional(),
});

export const laSetSchema = z.object({
  id: theSubjectUriSchema,
  type: genericString.and(z.literal("Set")),
  _label: rdfsLabelSchema.optional(),
});

export const noNameSchema = z.object({
  id: theSubjectUriSchema,
  type: genericString.and(allTypesSchema),
  _label: rdfsLabelSchema.optional(),
});

export const laAccessPointSchema = z.array(
  digD1DigitalObjectSeeSchemaDigitalHtmlSchema,
);

export const crmE73InformationObjectSchema = z.object({
  id: theSubjectUriSchema,
  type: genericString.and(informationTypeSchema),
  _label: rdfsLabelSchema.optional(),
});

export const crmP107IIsCurrentOrFormerMemberOfSchema =
  z.array(crmE74GroupSchema);


export const crmP74HasCurrentOrFormerResidenceSchema =
  z.array(crmE53PlaceSchema);


export const crmP9IFormsPartOfSchema = z.union([
  crmE6EventSchema,
  crmE7ActivitySchema,
]);

export const crmP9IFormsPartOf1Schema = z.union([
  crmE6EventSchema,
  crmE7ActivitySchema,
]);

export const noName1Schema = z.record(z.unknown());

export const crmP91HasUnitSchema = z.object({
  id: theSubjectUriSchema,
  type: genericString.and(measurementUnitTypeSchema),
  _label: rdfsLabelSchema.optional(),
});

export const jSONLDContextSchema = z.union([
  linkedArtSchema,
  linkedArtWithExtensionsSchema,
]);

export const crmP72HasLanguageSchema = z.array(crmE56LanguageSchema);

export const crmP7TookPlaceAtSchema = z.array(crmE53PlaceSchema);

export const sciO13IIsTriggeredBySchema = z.array(
  z.union([crmE6EventSchema, crmE7ActivitySchema]),
);

export const crmP14CarriedOutBySchema = z.array(
  z.union([e21PersonSchema, crmE74GroupSchema]),
);

export const crmP16UsedSpecificObjectSchema = z.array(
  z.union([crmE22HumanMadeObjectSchema, laSetSchema]),
);

export const crmP15WasInfluencedBySchema = z.array(noNameSchema);

export const dctermsConformsToSchema = z.array(crmE73InformationObjectSchema);

export const crmP2HasTypeSchema: z.ZodSchema<CrmP2HasType> = z.lazy(() =>
  z.array(crmE55TypeSchema),
);

export const crmE55TypeSchema: z.ZodSchema<CrmE55_Type> = z.lazy(() =>
  z.object({
    id: theSubjectUriSchema,
    _label: rdfsLabelSchema.optional(),
    type: genericString.and(typeTypeSchema),
    identified_by: crmP1IsIdentifiedBySchema.optional(),
    classified_as: crmP2HasTypeSchema.optional(),
  }),
);

export const crmP67IIsReferredToBySchema: z.ZodSchema<CrmP67IIsReferredToBy> =
  z.lazy(() =>
    z.array(
      z.union([
        crmE33LinguisticObjectSchema,
        digD1DigitalObjectSeeSchemaDigitalHtmlSchema,
        crmE33LinguisticObject1Schema,
      ]),
    ),
  );

export const crmE33LinguisticObjectSchema: z.ZodSchema<CrmE33_Linguistic_Object> =
  z.lazy(() =>
    z.object({
      _label: rdfsLabelSchema.optional(),
      type: genericString.and(textTypeSchema),
      identified_by: crmP1IsIdentifiedBySchema.optional(),
      referred_to_by: crmP67IIsReferredToBySchema.optional(),
      classified_as: crmP2HasTypeSchema.optional(),
      content: crmP190HasSymbolicContentSchema,
      language: crmP72HasLanguageSchema.optional(),
      format: dcFormatSchema.optional(),
    }),
  );


export const crmP32UsedGeneralTechniqueSchema: z.ZodSchema<CrmP32UsedGeneralTechnique> =
  z.lazy(() => z.array(crmE55TypeSchema));

export const crmP1IsIdentifiedBySchema: z.ZodSchema<CrmP1IsIdentifiedBy> =
  z.lazy(() =>
    z.array(
      z.union([crmE33E41LinguisticAppellationSchema, crmE42IdentifierSchema]),
    ),
  );

export const crmE33E41LinguisticAppellationSchema: z.ZodSchema<CrmE33_E41_Linguistic_Appellation> =
  z.lazy(() =>
    z.object({
      _label: rdfsLabelSchema.optional(),
      type: genericString.and(nameTypeSchema),
      identified_by: crmP1IsIdentifiedBySchema.optional(),
      classified_as: crmP2HasTypeSchema.optional(),
      content: crmP190HasSymbolicContentSchema,
      language: crmP72HasLanguageSchema.optional(),
      referred_to_by: crmP67IIsReferredToBySchema.optional(),
      part: z.array(crmE33E41LinguisticAppellationSchema).optional(),
    }),
  );

export const crmE42IdentifierSchema: z.ZodSchema<CrmE42_Identifier> = z.lazy(
  () =>
    z.object({
      _label: rdfsLabelSchema.optional(),
      type: genericString.and(identifierTypeSchema),
      identified_by: crmP1IsIdentifiedBySchema.optional(),
      classified_as: crmP2HasTypeSchema.optional(),
      content: crmP190HasSymbolicContentSchema,
      part: z.array(crmE42IdentifierSchema).optional(),
      assigned_by: z.array(crmE13AttributeAssignmentSchema).optional(),
    }),
);

export const laDigitallyShownBySchema: z.ZodSchema<LaDigitallyShownBy> = z.lazy(
  () => z.array(digD1DigitalObjectSchema),
);

export const digD1DigitalObjectSchema: z.ZodSchema<DigD1_Digital_Object> =
  z.lazy(() =>
    z.record(z.unknown()).and(
      z.object({
        type: genericString.and(digitalObjectTypeSchema).optional(),
        _label: rdfsLabelSchema.optional(),
        identified_by: crmP1IsIdentifiedBySchema.optional(),
        classified_as: crmP2HasTypeSchema.optional(),
        referred_to_by: crmP67IIsReferredToBySchema.optional(),
        access_point: laAccessPointSchema.optional(),
        format: dcFormatSchema.optional(),
        conforms_to: dctermsConformsToSchema.optional(),
      }),
    ),
  );

export const crmP138IHasRepresentationSchema: z.ZodSchema<CrmP138IHasRepresentation> =
  z.lazy(() => z.array(crmE36VisualItemSchema));

export const crmE36VisualItemSchema: z.ZodSchema<CrmE36_Visual_Item> = z.lazy(
  () =>
    z.object({
      type: genericString.and(visualItemTypeSchema),
      _label: rdfsLabelSchema.optional(),
      identified_by: crmP1IsIdentifiedBySchema.optional(),
      classified_as: crmP2HasTypeSchema.optional(),
      referred_to_by: crmP67IIsReferredToBySchema.optional(),
      digitally_shown_by: laDigitallyShownBySchema.optional(),
    }),
);

export const laDigitallyCarriedBySchema: z.ZodSchema<LaDigitallyCarriedBy> =
  z.lazy(() => z.array(digD1DigitalObjectSchema));

export const crmP129IIsSubjectOfSchema: z.ZodSchema<CrmP129IIsSubjectOf> =
  z.lazy(() => z.array(crmE33LinguisticObject2Schema));

export const crmE33LinguisticObject2Schema: z.ZodSchema<CrmE33_Linguistic_Object2> =
  z.lazy(() =>
    z.object({
      type: genericString.and(textTypeSchema),
      _label: rdfsLabelSchema.optional(),
      identified_by: crmP1IsIdentifiedBySchema.optional(),
      classified_as: crmP2HasTypeSchema.optional(),
      referred_to_by: crmP67IIsReferredToBySchema.optional(),
      language: crmP72HasLanguageSchema.optional(),
      digitally_carried_by: laDigitallyCarriedBySchema.optional(),
    }),
  );

export const crmP140IWasAttributedBySchema: z.ZodSchema<CrmP140IWasAttributedBy> =
  z.lazy(() => z.array(crmE13AttributeAssignmentSchema));

export const crmP14IPerformedSchema: z.ZodSchema<CrmP14IPerformed> = z.lazy(
  () => z.array(crmE7Activity1Schema),
);

export const crmE7Activity1Schema: z.ZodSchema<CrmE7_Activity1> = z.lazy(() =>
  z.object({
    type: genericString.and(activityTypeSchema),
    _label: rdfsLabelSchema.optional(),
    identified_by: crmP1IsIdentifiedBySchema.optional(),
    classified_as: crmP2HasTypeSchema.optional(),
    referred_to_by: crmP67IIsReferredToBySchema.optional(),
    took_place_at: crmP7TookPlaceAtSchema.optional(),
    timespan: crmP4HasTimeSpanSchema.optional(),
    caused_by: sciO13IIsTriggeredBySchema.optional(),
    carried_out_by: crmP14CarriedOutBySchema.optional(),
    used_specific_object: crmP16UsedSpecificObjectSchema.optional(),
    influenced_by: crmP15WasInfluencedBySchema.optional(),
    technique: crmP32UsedGeneralTechniqueSchema.optional(),
    part_of: z.union([crmE6EventSchema, crmE7ActivitySchema]).optional(),
  }),
);

export const crmP76HasContactPointSchema: z.ZodSchema<CrmP76HasContactPoint> =
  z.lazy(() => z.array(crmE42IdentifierSchema));

export const groupSchema: z.ZodSchema<GroupSchema> = z.lazy(() =>
  z.object({
    "@context": jSONLDContextSchema,
    id: theSubjectUriSchema,
    type: genericString.and(groupTypeSchema),
    _label: rdfsLabelSchema,
    identified_by: crmP1IsIdentifiedBySchema.optional(),
    classified_as: crmP2HasTypeSchema.optional(),
    referred_to_by: crmP67IIsReferredToBySchema.optional(),
    equivalent: z.array(crmE74GroupSchema).optional(),
    representation: crmP138IHasRepresentationSchema.optional(),
    member_of: crmP107IIsCurrentOrFormerMemberOfSchema.optional(),
    subject_of: crmP129IIsSubjectOfSchema.optional(),
    attributed_by: crmP140IWasAttributedBySchema.optional(),
    carried_out: crmP14IPerformedSchema.optional(),
    contact_point: crmP76HasContactPointSchema.optional(),
    residence: crmP74HasCurrentOrFormerResidenceSchema.optional(),
    formed_by: crmP95IWasFormedBySchema.optional(),
    dissolved_by: crmP99IWasDissolvedBySchema.optional(),
  }).strict(),
);

export const crmP95IWasFormedBySchema: z.ZodSchema<CrmP95IWasFormedBy> = z.lazy(
  () =>
    z.record(z.unknown()).and(
      z.object({
        type: genericString.and(formationTypeSchema).optional(),
        _label: rdfsLabelSchema.optional(),
        identified_by: crmP1IsIdentifiedBySchema.optional(),
        classified_as: crmP2HasTypeSchema.optional(),
        referred_to_by: crmP67IIsReferredToBySchema.optional(),
        took_place_at: crmP7TookPlaceAtSchema.optional(),
        timespan: crmP4HasTimeSpanSchema.optional(),
        caused_by: sciO13IIsTriggeredBySchema.optional(),
        carried_out_by: crmP14CarriedOutBySchema.optional(),
        used_specific_object: crmP16UsedSpecificObjectSchema.optional(),
        influenced_by: crmP15WasInfluencedBySchema.optional(),
        technique: crmP32UsedGeneralTechniqueSchema.optional(),
        part_of: crmP9IFormsPartOfSchema.optional(),
      }),
    ),
);

export const crmP99IWasDissolvedBySchema: z.ZodSchema<CrmP99IWasDissolvedBy> =
  z.lazy(() =>
    z.record(z.unknown()).and(
      z.object({
        type: genericString.and(dissolutionTypeSchema).optional(),
        _label: rdfsLabelSchema.optional(),
        identified_by: crmP1IsIdentifiedBySchema.optional(),
        classified_as: crmP2HasTypeSchema.optional(),
        referred_to_by: crmP67IIsReferredToBySchema.optional(),
        took_place_at: crmP7TookPlaceAtSchema.optional(),
        timespan: crmP4HasTimeSpanSchema.optional(),
        caused_by: sciO13IIsTriggeredBySchema.optional(),
        influenced_by: crmP15WasInfluencedBySchema.optional(),
        part_of: crmP9IFormsPartOf1Schema.optional(),
      }),
    ),
  );
